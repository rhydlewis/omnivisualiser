#! /usr/bin/env ruby -I ../lib/

# == Synopsis 
#   OPMLExport provides a simple method to export all active folders, projects and tasks as an OPML file.
#   This script only renders non-completed or non-dropped projects and actions.
#   It requires rb-appscript and builder (installable with rubygems). 
#
# == Usage 
#   opmlexport > filename.opml
#
# == Author
#   Rhyd Lewis

require 'omnivisualiser/item'
require 'omnivisualiser/folder'
require 'omnivisualiser/project'
require 'omnivisualiser/task'
require 'omnivisualiser/omnifocus'
require 'builder'
require 'time'

module OmniVisualiser
  class OPMLExport
    VERSION = '0.1'

		# used to build OPML file
    @builder
    
    def initialize()
      @builder = Builder::XmlMarkup.new(:target => STDOUT, :indent => 2)
      @builder.opml(:version => 1.1) do
        write_header()
        @builder.body do
        	# get the OF wrapper
          of = OmniVisualiser::OmniFocus.new(Appscript.app('OmniFocus').default_document)
          
          # iterate through each top-level folder and parse
          of.folders.each { |sf| parse_folder(sf) }

          # iterate through each top-level project outside of a folder and parse
          of.projects.each { |p| parse_project(p) }
        end
      end
    end
    
    # write standard OPML header
    # @TODO: add cmd line options to set owner name, email etc.
    def write_header()    
      @builder.head do
        @builder.title('OmniFocus OPML Export')
        @builder.dateCreated(Time.now.httpdate)
        @builder.dateModified(Time.now.httpdate)
# TODO         @builder.ownerName("")
# TODO         @builder.ownerEmail('example@example.com')
        end
    end
  
  	# Write folder details as OPML and look into next level down for more folders/projects
    def parse_folder(f)
      @builder.outline("text" => f.name(), "type" => "link", "url" => f.url(), "created" => f.creation_date()) do
        f.subfolders.each { |sf| parse_folder(sf) }
        f.projects().each { |p| parse_project(p) }
      end
    end
    
  	# Write project details as OPML and look into next level down for more tasks
    def parse_project(p)
      if (p.status() == :dropped || p.status() == :done)
        return
      end
      @builder.outline("text" => p.name(), "type" => "link", "url" => p.url(), "created" => p.creation_date()) do
        p.tasks().each { |t| parse_task(t) }
      end
    end
    
  	# Write task details as OPML and look into next level down for more tasks
    def parse_task(t)
      if (t.completed) 
        return
      end
      @builder.outline("text" => t.name(), "type" => "link", "url" => t.url(), "created" => t.creation_date()) do
      	t.tasks().each { |st| parse_task(st) }
      end
    end
  end
end

OmniVisualiser::OPMLExport.new()
